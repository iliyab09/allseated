trigger:
  branches:
    include:
      - main

variables:
  dockerRegistryServiceConnection: '<name of your Docker registry service connection>'
  imageRepository: '<name of your Docker image repository>'
  containerRegistry: '<URL of your Docker registry>'
  containerRegistryUsername: '<username for your Docker registry>'
  containerRegistryPassword: $(DOCKER_REGISTRY_PASSWORD)
  helmReleaseName: '<name of your Helm release>'
  helmChartPath: '<path to your Helm chart>'
  helmValuesFile: '<path to your Helm values file>'

stages:
  - stage: Build
    displayName: Build and Push Docker Image
    jobs:
      - job: BuildAndPush
        displayName: Build and Push Docker Image
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: Docker@2
            displayName: Build Docker Image
            inputs:
              containerRegistry: '$(dockerRegistryServiceConnection)'
              repository: '$(imageRepository)'
              command: 'build'
              Dockerfile: '**/Dockerfile'
              tags: |
                $(Build.BuildId)
                latest
          - task: Docker@2
            displayName: Push Docker Image
            inputs:
              containerRegistry: '$(dockerRegistryServiceConnection)'
              repository: '$(imageRepository)'
              command: 'push'
              tags: |
                $(Build.BuildId)
                latest

  - stage: Deploy
    displayName: Deploy to Kubernetes via Helm
    dependsOn: Build
    jobs:
      - job: Deploy
        displayName: Deploy to Kubernetes via Helm
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: HelmInstaller@1
            displayName: Install Helm
            inputs:
              helmVersionToInstall: 'latest'
          - task: HelmDeploy@0
            displayName: Deploy to Kubernetes via Helm
            inputs:
              connectionType: 'Kubernetes Service Connection'
              kubernetesServiceEndpoint: '<name of your Kubernetes service connection>'
              namespace: '<name of your Kubernetes namespace>'
              command: 'upgrade'
              chartType: 'FilePath'
              chartPath: '$(helmChartPath)'
              releaseName: '$(helmReleaseName)'
              valueFiles: '$(helmValuesFile)'
              waitForExecution: true